name: ðŸ”ŽðŸ“¦ Check for unused dependencies

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  depcheck:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install dependencies
      run: npm install

    - name: Run depcheck
      continue-on-error: true
      id: depcheck
      run: |        
        npx depcheck -y --json > unused-deps.json

    - name: Add GitHub Action Summary     
      run: |
        echo "## Unused Dependencies" >> $GITHUB_STEP_SUMMARY
        echo "The following dependencies are unused:" >> $GITHUB_STEP_SUMMARY
        for dep in $(jq -r '.dependencies[]' < unused-deps.json); do
          echo "- $dep" >> $GITHUB_STEP_SUMMARY
        done        

    - name: Create branches and PRs for unused dependencies
      run: |
        # Config git client
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
        git config pull.rebase true
        git config --global merge.ours.driver true
        echo "*.json merge=ours" >> .git/info/attributes

        for dep in $(jq -r '.dependencies[]' < unused-deps.json); do


          echo "Processing dependency: $dep"          

          branch_name="remove-$dep"

          echo "Branch name: $branch_name"

          gh pr list --label unused --search "is:open $branch_name" --json number -q '.[].number'

          pr_exists=$(gh pr list --search "head:$branch_name" --json number -q '.[].number')

          echo "PR exists: $pr_exists"

          if [ -z "$pr_exists" ]; then
            git checkout -b "$branch_name"           
            npm uninstall $dep
            git add package.json package-lock.json
            git commit -m "Remove unused dependency: $dep"
            git push origin "$branch_name"
            gh label create --name "unused" --color "ff0000" || true
            gh label create --name "dependencies" --color "ff0000" || true
            gh pr create --title "Remove unused dependency: $dep" --body "This PR removes the unused dependency: $dep" --label dependencies --label unused
          else
            echo "PR already exists for $dep, skipping."
          fi
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: If failed delete the branches
      if: failure()
      run: |
        for dep in $(jq -r '.dependencies[]' < unused-deps.json); do
          branch_name="remove-$dep"
          echo "Deleting branch: $branch_name"
          git push origin --delete "$branch_name" || true
        done